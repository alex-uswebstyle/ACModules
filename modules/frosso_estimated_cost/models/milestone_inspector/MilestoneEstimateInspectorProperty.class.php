<?php
class MilestoneEstimateInspectorProperty extends InspectorProperty {


	/**
	 * Remedia Milestone object
	 *
	 * @var RemediaMilestone
	 */
	private $object = null;

	/**
	 * Constructor
	 *
	 * @param Milestone $object
	 */
	function __construct($object) {
		if($object instanceof RemediaMilestone) {
			$this->object = $object;
		} else {
			$this->object = new RemediaMilestone ( $object->getId() );
		}
	} // __construct

	function render() {

		$estimate = $this->object->tracking()->getEstimate();

		if($estimate instanceof Estimate) {
			$estimate_value = $estimate->getValue();
			$estimate_autogenerated = $this->object->tracking()->isEstimateAutogenerated();
		} else {
			$estimate_value = 0;
			$estimate_autogenerated = false;
		} // if

		$settings = array(
				'value' => $estimate_value,
				'summed_time' => $this->object->tracking()->sumTime(Authentication::getLoggedUser()),
				'estimate_autogenerated' => $estimate_autogenerated,
				'short_format' => true,
				'can_change' => $this->object->tracking()->canEstimate(Authentication::getLoggedUser()),
				'estimates_url' => $this->object->tracking()->getEstimatesUrl(),
				'set_estimate_url' => $this->object->tracking()->getSetEstimateUrl(),
				'object_id' => $this->object->getId()
		);

		return '(function (field, object, client_interface) {
					App.Inspector.Properties.MilestoneEstimation.apply(field, [object, '.JSON::encode($settings).']);
				})';
	}

}